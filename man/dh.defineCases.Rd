% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/define-cases.R
\name{dh.defineCases}
\alias{dh.defineCases}
\title{Indicates whether each subject has any or all of the variables contained
within a set}
\usage{
dh.defineCases(
  df = NULL,
  vars = NULL,
  type = NULL,
  new_obj = NULL,
  conns = NULL,
  checks = FALSE,
  newobj = NULL
)
}
\arguments{
\item{df}{Character specifying a server-side data frame.}

\item{vars}{Character vector of columns within \code{df} to form definition set.}

\item{type}{Character specifying how to define cases. Use "any" to describe
subjects with data on any of \code{vars}, and "all" to describe subjects with data
on all of `vars.}

\item{new_obj}{Character specifying name for created serverside object.}

\item{conns}{DataSHIELD connections object.}

\item{checks}{Logical; if TRUE checks are performed prior to running the
function. Default is TRUE.}

\item{newobj}{Retired argument name. Please use `new_obj' instead.}
}
\value{
Server-side vector defining whether subject meets criteria defined by
\code{vars} and \code{type}. 1 indicates that criteria were met, 0 indicates that
criteria weren't met.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}

This function allowed you to describe whether a had non-missing values for a set of variables. It
was depricated because you can now use \code{dsTidyverseClient::ds.filter()} to create a subset
of a data frame matching multiple conditions.
}
\keyword{internal}
