% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make-strata.R
\name{dh.makeStrata}
\alias{dh.makeStrata}
\title{Creates strata of a repeated measures variable within specified age or time
bands}
\usage{
dh.makeStrata(
  df = NULL,
  id_var = NULL,
  age_var = NULL,
  var_to_subset = NULL,
  bands = NULL,
  mult_action = NULL,
  mult_vals = NULL,
  keep_vars = NULL,
  new_obj = NULL,
  band_action = NULL,
  conns = NULL,
  checks = TRUE,
  df_name = NULL
)
}
\arguments{
\item{df}{Character specifying a server-side data frame.}

\item{id_var}{Character giving the name of the column within \code{df} which
uniquely identifies each subject.}

\item{age_var}{Character specifying age or time variable in \code{df}.}

\item{var_to_subset}{Character specifying variable in \code{df} to stratify
according to bands.}

\item{bands}{Numeric vector of alternating lower and upper values specifying
the bands in which to derive strata of \code{var_to_subset}. This vector should
be an even number and twice the length of the number of bands required.}

\item{mult_action}{Character specifying how to handle cases where a subject
has more than one measurement within a specified band. Use "earliest" to
take the earliest measurement, "latest" to take the latest measurement and
"nearest" to take the measurement nearest to the value(s) specified in
\code{mult_vals}.}

\item{mult_vals}{Numeric vector specifying the value in each age band to
chose values closest to if subjects have more than one value per band.
Required only if mult_action is "nearest". The order and length of the vector
should correspond to the order and number of the bands.}

\item{keep_vars}{Optionally, a vector of variable names within df to include
within each strata created.}

\item{new_obj}{Character specifying name for created serverside object.}

\item{band_action}{Character specifying how the values provided in \code{bands}
are evaluated in creating the strata:
\itemize{
\item "g_l" = greater than the lowest band and less than the highest band
\item "ge_le" = greater or equal to the lowest band and less than or equal to the
highest band
\item "g_le" = greater than the lowest band and less than or equal to the highest
band
\item "ge_l" = greater than or equal to the lowest band and less than the highest
band
}}

\item{conns}{DataSHIELD connections object.}

\item{checks}{Logical; if TRUE checks are performed prior to running the
function. Default is TRUE.}

\item{df_name}{Retired argument name. Please use `new_obj' instead.}
}
\value{
Servside dataframe in wide format containing the derived variables.
For each band specified at least two variables will be returned:
\itemize{
\item var_to_subset
\item age_var.
The suffix .lower_band identifies the band for that variable.
}

If argument \code{keep_vars} is not NULL, then additional variables will be
added to the data frame representing these variables within the strata
created.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}
This function attempted to replicate the process of \code{dplyr::arrange() |> dplyr::group_by() |> 
dplyr::sort()}. It was deprecated because the same operation can be done much more quickly and flexibly
using \code{dsTidyverseClient::ds.arrange() |> dsTidyverseClient::ds.group_by() |> 
dsTidyverseClient::ds.slice()}.
}
\keyword{internal}
