% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make-excluded-df.R
\name{dh.makeExcludedDf}
\alias{dh.makeExcludedDf}
\title{Given df-A & df-B, creates a new df which is the rows in A but not in B}
\usage{
dh.makeExcludedDf(
  original_df,
  final_df,
  id_var = "child_id",
  new_obj,
  type = "wide",
  conns = NULL
)
}
\arguments{
\item{original_df}{Dataframe containing the full sample}

\item{final_df}{Dataframe containing the included sample}

\item{id_var}{Character giving the name of the column within \code{df} which
uniquely identifies each subject.}

\item{new_obj}{Character specifying name for created serverside object.}

\item{type}{Specifies type of dataframe in \code{original_df}. Either 'long' or
'wide'. NOTE NOT CURRENTLY FUNCTIONAL - ONLY WORKS FOR WIDE.}

\item{conns}{DataSHIELD connections object.}
}
\value{
Creates a serverside dataframe containing the rows from \code{original_df}
that are not contained in \code{final_df}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}

Often we need to exclude participants in an analysis. This function created a
dataframe containing participants in \code{original_df} but not in \code{final_df}. It was
deprecated because you can now use \code{dsTidyverseClient::ds.filter}, which is much quicker
and more flexible.
}
\keyword{internal}
